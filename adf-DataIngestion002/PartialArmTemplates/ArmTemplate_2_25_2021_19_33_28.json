{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-DataIngestion002"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Data Ingestion to SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data to SQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Truncate Stage Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Execute Stored procedure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data to SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dm].[Divide_Customer_Based_On_Country]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Stage Table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[stg].[Truncate_Customer]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Storage_Account')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "data001.txt",
						"container": "data"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Prop_0",
						"type": "String"
					},
					{
						"name": "H",
						"type": "String"
					},
					{
						"name": "Customer_Name",
						"type": "String"
					},
					{
						"name": "Customer_Id",
						"type": "String"
					},
					{
						"name": "Open_Date",
						"type": "String"
					},
					{
						"name": "Last_Consulted_Date",
						"type": "String"
					},
					{
						"name": "Vaccination_Id",
						"type": "String"
					},
					{
						"name": "Dr_Name",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "DOB",
						"type": "String"
					},
					{
						"name": "Is_Active",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Storage_Account",
								"type": "DatasetReference"
							},
							"name": "source"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "sink"
						}
					],
					"transformations": [
						{
							"name": "SelectColumns"
						},
						{
							"name": "DerivedColumn"
						}
					],
					"script": "source(output(\n\t\tProp_0 as string,\n\t\tH as string,\n\t\tCustomer_Name as string,\n\t\tCustomer_Id as string,\n\t\tOpen_Date as string,\n\t\tLast_Consulted_Date as string,\n\t\tVaccination_Id as string,\n\t\tDr_Name as string,\n\t\tState as string,\n\t\tCountry as string,\n\t\tDOB as string,\n\t\tIs_Active as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source\nsource select(mapColumn(\n\t\tCustomer_Name,\n\t\tCustomer_Id,\n\t\tOpen_Date,\n\t\tLast_Consulted_Date,\n\t\tVaccination_Id,\n\t\tDr_Name,\n\t\tState,\n\t\tCountry,\n\t\tDOB,\n\t\tIs_Active\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumns\nSelectColumns derive(Open_Date = toDate(concat(substring(Open_Date,1,4),'-',substring(Open_Date,5,2),'-',substring(Open_Date,7,2)) , 'yyyy-MM-dd'),\n\t\tLast_Consulted_Date = toDate(concat(substring(Last_Consulted_Date,1,4),'-',substring(Last_Consulted_Date,5,2),'-',substring(Last_Consulted_Date,7,2)) , 'yyyy-MM-dd'),\n\t\tDOB = toDate(concat(substring(DOB,5,4),'-',substring(DOB,3,2),'-',substring(DOB,1,2)) , 'yyyy-MM-dd')) ~> DerivedColumn\nDerivedColumn sink(input(\n\t\tCustomer_Name as string,\n\t\tCustomer_ID as string,\n\t\tCustomer_Open_Date as date,\n\t\tLast_Consulted_Date as date,\n\t\tVaccination_Type as string,\n\t\tDoctor_Consulted as string,\n\t\tState as string,\n\t\tCountry as string,\n\t\tPost_Code as integer,\n\t\tDate_of_Birth as date,\n\t\tActive_Customer as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tCustomer_Name,\n\t\tCustomer_ID = Customer_Id,\n\t\tCustomer_Open_Date = Open_Date,\n\t\tLast_Consulted_Date,\n\t\tVaccination_Type = Vaccination_Id,\n\t\tDoctor_Consulted = Dr_Name,\n\t\tState,\n\t\tCountry,\n\t\tDate_of_Birth = DOB,\n\t\tActive_Customer = Is_Active\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Storage_Account')]"
			]
		}
	]
}